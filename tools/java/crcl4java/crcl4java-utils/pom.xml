<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>crcl4java-utils</artifactId>
    
    <packaging>jar</packaging>
    <parent>
        <relativePath>..</relativePath>
        <artifactId>crcl4java</artifactId>
        <groupId>com.github.wshackle</groupId>
        <version>1.5-SNAPSHOT</version>
    </parent>
    <description>
        Basic Socket and Posemath utilities to make using CRCL easier.
    </description>
    <dependencies>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <artifactId>crcl4java-base</artifactId>
            <groupId>${project.groupId}</groupId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rcslib</artifactId>
            <version>2017.07.19</version>
        </dependency>
    </dependencies>
    <properties>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <!-- <main.class>crcl.utils.DefaultMain</main.class> -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
    </properties>
    <build>
        
        
        <plugins>
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin> -->
        
            
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.config.file>
                            src/test/resources/logging.properties
                        </java.util.logging.config.file>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.5</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- <mainClass>${main.class}</mainClass> -->
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <name>crcl4java-utils</name>
    <profiles>
        <profile>
            <id>with_checkers</id>
            <properties>
                <!-- For checker framework , http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#maven -->
                <!-- These properties will be set by the Maven Dependency plugin -->
                <!-- Change to jdk7 if using Java 7 -->
                <annotatedJdk>${org.checkerframework:jdk7:jar}</annotatedJdk>
                <!-- The type annotations compiler is required if using Java 7. -->
                <!-- Uncomment the following line if using Java 7. -->
                <typeAnnotationsJavac>${org.checkerframework:compiler:jar}</typeAnnotationsJavac>
            </properties>
            <dependencies>
                <!-- For checker framework , http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#maven -->
                <!-- annotations from the Checker Framework: nullness, interning, locking, ... -->
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                    <version>1.9.11</version>
                </dependency>
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>1.9.11</version>
                </dependency>
                <!-- The type annotations compiler - uncomment if using Java 7 -->
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>compiler</artifactId>
                    <version>1.9.11</version>
                </dependency>
                <!-- The annotated JDK to use (change to jdk7 if using Java 7) -->
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>jdk7</artifactId>
                    <version>1.9.11</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <!-- For checker framework , http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#maven -->
                        <!-- This plugin will set properties values using dependency information -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.3</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>properties</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
            
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.3</version>
                        <configuration>
                            <!-- Change source and target to 1.7 if using Java 7 -->
                            <source>1.7</source>
                            <target>1.7</target>
                            <fork>true</fork>
                            <annotationProcessors>
                                <!-- Add all the checkers you want to enable here -->
                                <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                            </annotationProcessors>
                            <compilerArgs>
                                <arg>-Xlint:unchecked</arg>
                                <!-- location of the annotated JDK, which comes from a Maven dependency -->
                                <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
                                <!-- Uncomment the following line if using Java 7. -->
                                <arg>-J-Xbootclasspath/p:${typeAnnotationsJavac}</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>